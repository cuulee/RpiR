// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// read_analog
NumericVector read_analog(NumericVector chan);
RcppExport SEXP RpiR_read_analog(SEXP chanSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type chan(chanSEXP);
    __result = Rcpp::wrap(read_analog(chan));
    return __result;
END_RCPP
}
// start_poll
void start_poll(int chan, double ms, int buffer_size);
RcppExport SEXP RpiR_start_poll(SEXP chanSEXP, SEXP msSEXP, SEXP buffer_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type chan(chanSEXP);
    Rcpp::traits::input_parameter< double >::type ms(msSEXP);
    Rcpp::traits::input_parameter< int >::type buffer_size(buffer_sizeSEXP);
    start_poll(chan, ms, buffer_size);
    return R_NilValue;
END_RCPP
}
// stop_poll
void stop_poll(int chan);
RcppExport SEXP RpiR_stop_poll(SEXP chanSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type chan(chanSEXP);
    stop_poll(chan);
    return R_NilValue;
END_RCPP
}
// read_poll
NumericVector read_poll(int chan);
RcppExport SEXP RpiR_read_poll(SEXP chanSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type chan(chanSEXP);
    __result = Rcpp::wrap(read_poll(chan));
    return __result;
END_RCPP
}
// pin_mode
void pin_mode(int pin, CharacterVector mode);
RcppExport SEXP RpiR_pin_mode(SEXP pinSEXP, SEXP modeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type pin(pinSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type mode(modeSEXP);
    pin_mode(pin, mode);
    return R_NilValue;
END_RCPP
}
// pin_control
void pin_control(int pin, CharacterVector mode);
RcppExport SEXP RpiR_pin_control(SEXP pinSEXP, SEXP modeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type pin(pinSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type mode(modeSEXP);
    pin_control(pin, mode);
    return R_NilValue;
END_RCPP
}
// write_digital
void write_digital(int pin, bool signal);
RcppExport SEXP RpiR_write_digital(SEXP pinSEXP, SEXP signalSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type pin(pinSEXP);
    Rcpp::traits::input_parameter< bool >::type signal(signalSEXP);
    write_digital(pin, signal);
    return R_NilValue;
END_RCPP
}
// read_digital
bool read_digital(int pin);
RcppExport SEXP RpiR_read_digital(SEXP pinSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type pin(pinSEXP);
    __result = Rcpp::wrap(read_digital(pin));
    return __result;
END_RCPP
}
// write_pwm
void write_pwm(int pin, int value);
RcppExport SEXP RpiR_write_pwm(SEXP pinSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type pin(pinSEXP);
    Rcpp::traits::input_parameter< int >::type value(valueSEXP);
    write_pwm(pin, value);
    return R_NilValue;
END_RCPP
}
// write_analog
void write_analog(int pin, int value);
RcppExport SEXP RpiR_write_analog(SEXP pinSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type pin(pinSEXP);
    Rcpp::traits::input_parameter< int >::type value(valueSEXP);
    write_analog(pin, value);
    return R_NilValue;
END_RCPP
}
