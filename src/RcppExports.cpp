// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// start_thread
void start_thread();
RcppExport SEXP RpiR_start_thread() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    start_thread();
    return R_NilValue;
END_RCPP
}
// read_val
uint16_t read_val();
RcppExport SEXP RpiR_read_val() {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    __result = Rcpp::wrap(read_val());
    return __result;
END_RCPP
}
// init
void init();
RcppExport SEXP RpiR_init() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    init();
    return R_NilValue;
END_RCPP
}
// readAnalog
NumericVector readAnalog(NumericVector chan);
RcppExport SEXP RpiR_readAnalog(SEXP chanSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type chan(chanSEXP);
    __result = Rcpp::wrap(readAnalog(chan));
    return __result;
END_RCPP
}
// readAnalogScalar
int readAnalogScalar(int chan);
RcppExport SEXP RpiR_readAnalogScalar(SEXP chanSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type chan(chanSEXP);
    __result = Rcpp::wrap(readAnalogScalar(chan));
    return __result;
END_RCPP
}
